CREATE CLUSTERED INDEX [Date] ON [dbo].[LogHistorys]
(
	[Time] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO

CREATE NONCLUSTERED INDEX [URLID] ON [dbo].[LogHistorys]
(
	[URLId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF)

GO

CREATE PROCEDURE GetallLogs
    @URLid UNIQUEIDENTIFIER
AS
SELECT URLId, ServiceName, Time, Wasup, UsedPing, UsedHttp, Latency
FROM LogHistorys
WHERE URLid=@URLid
GO

CREATE PROCEDURE GetLogsBetween
    @FROM DATETIME,
    @TO DATETIME
AS
SELECT ServiceName, Time, Latency
FROM LogHistorys
Where Time between @FROM and @TO
GO

CREATE PROCEDURE GetServices
AS
SELECT *
FROM URLs
GO


CREATE PROCEDURE GetLogs
AS
SELECT *
FROM LogHistorys
GO


CREATE TRIGGER [dbo].[tr_SERVICENAME_Modified]
   ON [dbo].[URLs]
   AFTER UPDATE
AS 
BEGIN
    SET NOCOUNT ON;

    UPDATE LogHistorys SET ServiceName = I.ServiceName

    FROM LogHistorys L
        INNER JOIN Inserted I on L.URLId = I.Id 
	WHERE L.ServiceName <> I.ServiceName
END