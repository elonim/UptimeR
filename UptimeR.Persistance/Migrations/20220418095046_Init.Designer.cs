// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UptimeR.Persistance;

#nullable disable

namespace UptimeR.Persistance.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220418095046_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UptimeR.Domain.LogHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latency")
                        .HasColumnType("float");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("URLId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("UsedHttp")
                        .HasColumnType("bit");

                    b.Property<bool>("UsedPing")
                        .HasColumnType("bit");

                    b.Property<bool>("WasUp")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("URLId");

                    b.ToTable("LogHistorys");
                });

            modelBuilder.Entity("UptimeR.Domain.URL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastHitTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LastResultOk")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastResultTimeOk")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnlyPing")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("URLs");
                });

            modelBuilder.Entity("UptimeR.Domain.LogHistory", b =>
                {
                    b.HasOne("UptimeR.Domain.URL", null)
                        .WithMany("Logs")
                        .HasForeignKey("URLId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UptimeR.Domain.URL", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
